variables: 
  USER_K3S: ubuntu
  K3S_VERSION: v1.21.4+k3s1
  K3S_CONTEXT: k3s-vmware
  # MASTER_1: 192.168.1.93
  # WORKER_1: 192.168.1.94

# destroy-k3s:
#   stage: deploy
#   script:
#     - terraform init -backend-config="token=${TFC_TOKEN}"
#     - terraform apply -var="vsphere_vcenter=${vsphere_vcenter}" -var="vsphere_user=${vsphere_user}" -var="vsphere_password=${vsphere_password}" -var="ssh_username=${ssh_username}" -var="ssh_password=${ssh_password}" --auto-approve -destroy
#   tags: [inK8s]

terraform-build-k3s:
  stage: build
  script:
    - whoami
    - export USER=$(whoami)
    - echo ${USER}
    - mkdir -p /home/${USER}/.terraform.d
    - |-
      cat > /home/${USER}/.terraform.d/credentials.tfrc.json <<-EOF
      {
        "credentials": {
          "app.terraform.io": {
            "token": "${TFC_TOKEN}"
          }
        }
      }
      EOF
    - terraform init -backend-config="token=${TFC_TOKEN}"
    - terraform fmt
    - terraform validate
    - export TF_LOG=trace
    - terraform plan -lock=false -var="vsphere_vcenter=${vsphere_vcenter}" -var="vsphere_user=${vsphere_user}" -var="vsphere_password=${vsphere_password}" -var="ssh_username=${ssh_username}" -var="ssh_password=${ssh_password}"
    - terraform apply -var="vsphere_vcenter=${vsphere_vcenter}" -var="vsphere_user=${vsphere_user}" -var="vsphere_password=${vsphere_password}" -var="ssh_username=${ssh_username}" -var="ssh_password=${ssh_password}" --auto-approve
    - terraform output -json
    - terraform output -json >> build.env
    - terraform output -json >> build.env
  artifacts:
    reports:
      dotenv: build.env
  tags: [inK8s]

deploy-k3s:
  stage: deploy
  script:
    - mkdir -p /home/${USER}/.kube
    - touch /home/${USER}/.kube/config
    - curl -sLS https://get.k3sup.dev | sh
    - sudo install k3sup /usr/local/bin/
    - k3sup install --ip ${MASTER_1} --local-path ~/.kube/config --k3s-version ${K3S_VERSION} --context ${K3S_CONTEXT} --user ${USER_K3S}
    - sleep 20
    - k3sup join --ip ${WORKER_1} --server-ip ${MASTER_1} --user ${USER_K3S} --k3s-version ${K3S_VERSION}
    - sleep 20
    - kubectl taint nodes master-1 key=value:NoSchedule
  needs:
    - job: terraform-build-k3s
      artifacts: true
  tags: [inK8s]